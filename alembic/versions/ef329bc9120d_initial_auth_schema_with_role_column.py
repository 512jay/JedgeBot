"""Initial auth schema with role column

Revision ID: ef329bc9120d
Revises: 
Create Date: 2025-03-21 14:33:19.494090

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ef329bc9120d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "role",
            sa.Enum("FREE", "CLIENT", "MANAGER", "ENTERPRISE", name="userrole"),
            nullable=False,
            comment="Role of the user",
            server_default="FREE",
        ),
    )
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               comment='Primary key (UUID)',
               existing_nullable=False,
               existing_server_default=sa.text('uuid_generate_v4()'))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               comment="User's email address",
               existing_nullable=False)
    op.alter_column('users', 'password_hash',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               comment='BCrypt-hashed password',
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               comment='Whether the account is active',
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               comment='Timestamp of user registration',
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'last_login',
               existing_type=postgresql.TIMESTAMP(),
               comment='Last login timestamp',
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'last_login',
               existing_type=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='Last login timestamp',
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               comment=None,
               existing_comment='Timestamp of user registration',
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               comment=None,
               existing_comment='Whether the account is active',
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'password_hash',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               comment=None,
               existing_comment='BCrypt-hashed password',
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment="User's email address",
               existing_nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='Primary key (UUID)',
               existing_nullable=False,
               existing_server_default=sa.text('uuid_generate_v4()'))
    op.drop_column('users', 'role')
    # ### end Alembic commands ###
