"""Add cascade delete to password reset tokens

Revision ID: f6df294f76d5
Revises: ac6a215aa1f4
Create Date: 2025-03-21 17:54:50.854942

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f6df294f76d5'
down_revision: Union[str, None] = 'ac6a215aa1f4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('password_reset_tokens')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('password_reset_tokens',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False, comment='Primary key for the reset token entry'),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False, comment='User the reset token is associated with'),
    sa.Column('token', sa.VARCHAR(length=128), autoincrement=False, nullable=False, comment='Secure random token'),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='Token expiration timestamp'),
    sa.Column('used', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Whether this token has been used already'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='password_reset_tokens_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='password_reset_tokens_pkey'),
    sa.UniqueConstraint('token', name='password_reset_tokens_token_key')
    )
    # ### end Alembic commands ###
