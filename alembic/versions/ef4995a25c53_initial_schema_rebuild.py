"""initial schema rebuild

Revision ID: ef4995a25c53
Revises:
Create Date: 2025-04-02 01:50:03.954472

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ef4995a25c53'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False, comment='Primary key (UUID)'),
    sa.Column('email', sa.String(length=255), nullable=False, comment="User's email address"),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=False, comment='BCrypt-hashed password'),
    sa.Column('role', sa.Enum('trader', 'client', 'manager', 'enterprise', name='userrole', native_enum=False), nullable=False, comment='Role of the user'),
    sa.Column('status', sa.Enum('active', 'grace', 'downgraded', 'banned', 'deactivated', name='userstatus', native_enum=False), nullable=False, comment='Account status used for login gating'),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('NOW()'), nullable=False, comment='Timestamp of user registration'),
    sa.Column('last_login', sa.TIMESTAMP(), nullable=True, comment='Last login timestamp'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('waitlist_entries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('trader', 'client', 'manager', 'enterprise', name='userrole'), nullable=False),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('password_reset_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(), nullable=False, comment='Secure random token'),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False, comment='UTC expiration timestamp'),
    sa.Column('used', sa.Boolean(), nullable=False, comment='Flag to prevent reuse'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('user_profiles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_profiles')
    op.drop_table('password_reset_tokens')
    op.drop_table('waitlist_entries')
    op.drop_table('users')
    # ### end Alembic commands ###
