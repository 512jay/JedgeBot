"""upgrade password_reset_tokens table to use as_uuid and timezone-aware datetime

Revision ID: ce2eb894601a
Revises: 6f28cb8d274e
Create Date: 2025-03-25 23:58:43.987578

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ce2eb894601a'
down_revision: Union[str, None] = '6f28cb8d274e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('password_reset_tokens', 'id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='Primary key for the reset token entry',
               existing_nullable=False)
    op.alter_column('password_reset_tokens', 'user_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='User the reset token is associated with',
               existing_nullable=False)
    op.alter_column('password_reset_tokens', 'expires_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               comment='UTC expiration timestamp',
               existing_comment='Token expiration timestamp',
               existing_nullable=False)
    op.alter_column('password_reset_tokens', 'used',
               existing_type=sa.BOOLEAN(),
               comment='Flag to prevent reuse',
               existing_comment='Whether this token has been used already',
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('password_reset_tokens', 'used',
               existing_type=sa.BOOLEAN(),
               comment='Whether this token has been used already',
               existing_comment='Flag to prevent reuse',
               existing_nullable=False)
    op.alter_column('password_reset_tokens', 'expires_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               comment='Token expiration timestamp',
               existing_comment='UTC expiration timestamp',
               existing_nullable=False)
    op.alter_column('password_reset_tokens', 'user_id',
               existing_type=sa.UUID(),
               comment='User the reset token is associated with',
               existing_nullable=False)
    op.alter_column('password_reset_tokens', 'id',
               existing_type=sa.UUID(),
               comment='Primary key for the reset token entry',
               existing_nullable=False)
    # ### end Alembic commands ###
